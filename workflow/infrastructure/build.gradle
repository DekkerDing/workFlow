description '基础设施'

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa'){
        transitive(true)
    }

    // https://mvnrepository.com/artifact/org.camunda.bpm.springboot/camunda-bpm-spring-boot-starter
    implementation ('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter'){
        transitive(true)
    }
    // https://mvnrepository.com/artifact/org.camunda.bpm.springboot/camunda-bpm-spring-boot-starter-webapp
    implementation ('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp'){
        transitive(true)
    }
    // https://mvnrepository.com/artifact/org.camunda.bpm.springboot/camunda-bpm-spring-boot-starter-rest
    implementation ('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest'){
        transitive(true)
    }
    // https://mvnrepository.com/artifact/org.camunda.bpm/camunda-engine-plugin-spin
    implementation ('org.camunda.bpm:camunda-engine-plugin-spin'){
        transitive(true)
    }

    // https://mvnrepository.com/artifact/org.camunda.spin/camunda-spin-dataformat-json-jackson
    implementation ('org.camunda.spin:camunda-spin-dataformat-json-jackson'){
        transitive(true)
    }

    // https://mvnrepository.com/artifact/org.camunda.spin/camunda-spin-dataformat-all
    implementation ('org.camunda.spin:camunda-spin-dataformat-all'){
        transitive(true)
    }

    // https://mvnrepository.com/artifact/org.camunda.bpm.springboot/camunda-bpm-spring-boot-starter-external-task-client
    implementation ('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-external-task-client'){
        transitive(true)
    }

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jdk8
    implementation ('com.fasterxml.jackson.datatype:jackson-datatype-jdk8'){
        transitive(true)
    }

    implementation project(":domain")

    implementation 'com.h2database:h2'

    // https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
    implementation ('javax.ws.rs:javax.ws.rs-api:2.1.1'){
        transitive(false)
    }

    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation ('javax.annotation:javax.annotation-api:1.3.2'){
        transitive(false)
    }

    // https://mvnrepository.com/artifact/javax.validation/validation-api
    implementation ('javax.validation:validation-api:2.0.1.Final'){
        transitive(false)
    }

    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    implementation ('org.hibernate.validator:hibernate-validator:8.0.1.Final'){
        transitive(false)
    }

}

tasks.test {
    useJUnitPlatform()
}